// Buttons variables

$button-stroke: 2px;

// Buttons

@mixin add-inset-stroke($units, $color) {
  box-shadow: inset 0 0 0 units($units) color($color);
}

@mixin add-stroke($units, $color) {
  box-shadow: 0 0 0 units($units) color($color);
}

@mixin build-button-variant($color) {
  $is-default: false;
  @if $color == default {
    $color: $theme-default-button-color-family;
    $is-default: true;
  }
  @if $color != 'disabled' {
    $luminance-bg: luminance(color($color));
    $luminance-hover: luminance(color('#{$color}-dark'));
    $luminance-active: luminance(color('#{$color}-darker'));
    $text-default: 'white';
    $text-hover: 'white';
    $text-active: 'white';
    @if $luminance-bg > $luminance-critical {
      $text-default: 'black-transparent-80';
    }
    @if $luminance-hover > $luminance-critical {
      $text-hover: 'black-transparent-80';
    }
    @if $luminance-active > $luminance-critical {
      $text-active: 'black-transparent-80';
    }

    @if $is-default {
      @include states-bg('#{$color}', '#{$color}-dark', '#{$color}-darker');
      @include states-color($text-default, $text-hover, $text-active);

      &:disabled,
      &.is-disabled {
        @include button-disabled;
      }
    }
    @else {
      &.usa-button-#{$color} {
        @include states-bg('#{$color}', '#{$color}-dark', '#{$color}-darker');
        @include states-color($text-default, $text-hover, $text-active);

        &:disabled,
        &.is-disabled {
          @include button-disabled;
        }
      }
    }
  }
}

@mixin button {
  @include add-knockout-font-smoothing;
  @include border-box-sizing;
  @include typeset($theme-button-font-family, null, 1);
  appearance: none;
  border: 0;
  border-radius: radius($theme-button-border-radius);
  cursor: pointer;
  display: inline-block;
  font-weight: font-weight('bold');
  margin-right: units(1);
  padding: units(1.5) units(2.5);
  text-align: center;
  text-decoration: none;
  width: 100%;

  @include at-media('mobile-lg') {
    width: auto;
  }

  &:hover,
  &.is-hover {
    border-bottom: 0;
    text-decoration: none;
  }

  &:focus,
  &.is-focus {
    outline-offset: units(0.5);
  }

  &:disabled,
  &.is-disabled {
    @include button-disabled;
  }
}

@mixin button-outline {
  @include button;
  @include no-knockout-font-smoothing;
  @include states-bg('transparent');
  background-color: color('transparent');
  box-shadow: $button-stroke color('primary');

  &:disabled,
  &.is-disabled {
    background-color: color('transparent');
    box-shadow: $button-stroke color('disabled');
    color: color('disabled');
    pointer-events: none;
  }
}

.usa-button {
  @include button;
  @include build-button-variant(default);

  @each $color in map-keys($project-colors) {
    @include build-button-variant($color);
  }

  @each $color in map-keys($project-state-colors) {
    @include build-button-variant($color);
  }

  &.usa-button-inverse {
    @include states-bg('white', 'base-lighter', 'base-light');
    @include states-color('ink');

    &:disabled,
    &.is-disabled {
      background-color: color('white-transparent-20');
    }
  }

  &.usa-button-outline {
    @include add-inset-stroke($button-stroke, 'primary');
    @include states-bg('transparent');
    @include states-color('primary', 'primary-dark', 'primary-darker');

    &:hover,
    &.is-hover {
      @include add-inset-stroke($button-stroke, 'primary-dark');
    }

    &:active,
    &.is-active {
      @include add-inset-stroke($button-stroke, 'primary-darker');
    }

    &.usa-button-primary {
      @include add-inset-stroke($button-stroke, 'primary');
      @include states-bg('transparent');
      @include states-color('primary', 'primary-dark', 'primary-darker');

      &:hover,
      &.is-hover {
        @include add-inset-stroke($button-stroke, 'primary-dark');
      }

      &:active,
      &.is-active {
        @include add-inset-stroke($button-stroke, 'primary-darker');
      }

      &:disabled,
      &.is-disabled {
        @include add-inset-stroke($button-stroke, 'disabled');
        color: color('disabled');
      }
    }

    &.usa-button-inverse,
    &.usa-button-white {
      @include add-inset-stroke($button-stroke, 'base-lighter');
      @include states-color('base-lighter', 'base-lightest', 'white');

      &:hover,
      &.is-hover {
        @include add-inset-stroke($button-stroke, 'base-lightest');
      }

      &:active,
      &.is-active {
        @include add-inset-stroke($button-stroke, 'white');
      }

      &:disabled,
      &.is-disabled {
        @include add-inset-stroke($button-stroke, 'base');
        background-color: color('transparent');
        color: color('base');
      }
    }
  }
}

.usa-button-big {
  @include button
  @include states-bg('primary', 'primary-dark', 'primary-darker');
  @include states-color('white');
  border-radius: radius('md');
  font-size: font-size($theme-button-font-family, 'lg');
  padding: units(2) units(3);
}

.usa-button-unstyled {
  @include button-unstyled;
}
